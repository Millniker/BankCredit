// <auto-generated />
using System;
using System.Collections.Generic;
using CreditService.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ClassLibrary1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CreditService.DAL.Entities.CreditRules", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("InterestRateMax")
                        .HasColumnType("double precision");

                    b.Property<double>("InterestRateMin")
                        .HasColumnType("double precision");

                    b.Property<List<Guid>>("LoanIds")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Term")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("CreditRules");
                });

            modelBuilder.Entity("CreditService.DAL.Entities.Loan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid>("CreditRulesId")
                        .HasColumnType("uuid");

                    b.Property<int>("CurrencyType")
                        .HasColumnType("integer");

                    b.Property<double>("InterestRate")
                        .HasColumnType("double precision");

                    b.Property<Guid>("LoanAppId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Loan");
                });

            modelBuilder.Entity("CreditService.DAL.Entities.LoanApp", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("LoanId")
                        .HasColumnType("uuid");

                    b.Property<int>("LoanStatus")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.ToTable("LoanApp");
                });

            modelBuilder.Entity("CreditService.DAL.Entities.CreditRules", b =>
                {
                    b.OwnsOne("CreditService.DAL.Entities.Money", "AmountMax", b1 =>
                        {
                            b1.Property<Guid>("CreditRulesId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("numeric");

                            b1.Property<int>("Currency")
                                .HasColumnType("integer");

                            b1.HasKey("CreditRulesId");

                            b1.ToTable("CreditRules");

                            b1.WithOwner()
                                .HasForeignKey("CreditRulesId");
                        });

                    b.OwnsOne("CreditService.DAL.Entities.Money", "AmountMin", b1 =>
                        {
                            b1.Property<Guid>("CreditRulesId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("numeric");

                            b1.Property<int>("Currency")
                                .HasColumnType("integer");

                            b1.HasKey("CreditRulesId");

                            b1.ToTable("CreditRules");

                            b1.WithOwner()
                                .HasForeignKey("CreditRulesId");
                        });

                    b.Navigation("AmountMax")
                        .IsRequired();

                    b.Navigation("AmountMin")
                        .IsRequired();
                });

            modelBuilder.Entity("CreditService.DAL.Entities.LoanApp", b =>
                {
                    b.HasOne("CreditService.DAL.Entities.Loan", "Loan")
                        .WithMany()
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");
                });
#pragma warning restore 612, 618
        }
    }
}
